Q: When would you want to use a remote repository rather than keeping all your work local?
A: The remote repository can be useful when several people are working on the project and would like to save commit or 
   when one user works on several machines. Another reason to use remote is when you want to share your work with others
   get feedback.
   
Q:Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
A:Because you might want only some changes to be present at your local machine, for example you are developing smth on your local machine and do not want to apply changes from remote yet

Q:Describe the differences between forks, clones, and branches. When would you use one instead of another?
A:Fork is copy of GitHub remote, the copy is also stored in GitHub. Clone is copy of the repository to the local machine. Brache is where all commits historicaly saved. You would use Fork when you need a copy of the repository online on GitHub, while if you only need local copy then you would use clone, and branches are used when the new commits added to the history and also to have several different ways of development, features. 

Q:What is the benefit of having a copy of the last known state of the remote stored locally?
A:One of the benefits is that everyone can modify the programm without internet connectios. Additionaly, if a lot of people will work on the project everyone can download the last availible state of the file and modify it.   

Q: How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
A: I would use some chat programms such as skype to discuss code and changes and send the progra,, by email or post it in the cloud. Communicating through emails will be harder in terms of knowing the changes and seeing all of the previously done commits, however it will be easier for people who do not know Git. 

Q: When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
A: I would want to make changes in a separate branch when the changes might not be included in the final code and in case there are several people working on the same programm. The benefit of having 1 brach is that you do not need to first pull to your local machine and then merge branches together, while with having several braches there are several people who can work on the same part of the code and then merge it together or do not include changes at all. 
